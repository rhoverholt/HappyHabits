[{"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\index.js":"1","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\reportWebVitals.js":"2","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\App.js":"3","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Login.js":"4","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Signup.js":"5","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Home.js":"6","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Navbar\\Navbar.js":"7","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Dashboard.js":"8","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Habit.js":"9","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Header\\index.js":"10","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Footer\\index.js":"11","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\auth.js":"12","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\mutations.js":"13","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\queries.js":"14","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Habit\\index.js":"15","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\PlotChart\\index.js":"16","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Habit\\taskDateFuns.js":"17"},{"size":500,"mtime":1649622679767,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1648593991390,"results":"20","hashOfConfig":"19"},{"size":2159,"mtime":1649810806401,"results":"21","hashOfConfig":"19"},{"size":2519,"mtime":1649718011917,"results":"22","hashOfConfig":"19"},{"size":2665,"mtime":1649540053704,"results":"23","hashOfConfig":"19"},{"size":238,"mtime":1649718011917,"results":"24","hashOfConfig":"19"},{"size":1183,"mtime":1649718011915,"results":"25","hashOfConfig":"19"},{"size":783,"mtime":1649965924114,"results":"26","hashOfConfig":"19"},{"size":8449,"mtime":1649810806405,"results":"27","hashOfConfig":"19"},{"size":1055,"mtime":1649963524756,"results":"28","hashOfConfig":"19"},{"size":800,"mtime":1649540053699,"results":"29","hashOfConfig":"19"},{"size":1868,"mtime":1649622679769,"results":"30","hashOfConfig":"19"},{"size":3411,"mtime":1649713846279,"results":"31","hashOfConfig":"19"},{"size":1266,"mtime":1649561264605,"results":"32","hashOfConfig":"19"},{"size":5160,"mtime":1649980720287,"results":"33","hashOfConfig":"19"},{"size":608,"mtime":1649965955975,"results":"34","hashOfConfig":"19"},{"size":1402,"mtime":1649977998349,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xwmakv",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\index.js",[],["73","74"],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\reportWebVitals.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\App.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Login.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Signup.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Home.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Dashboard.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\pages\\Habit.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport {QUERY_ME} from '../utils/queries';\nimport {CREATE_HABIT, REMOVE_TASK, CREATE_TASK, UPDATE_HABIT} from '../utils/mutations';\n\n\nimport Auth from \"../utils/auth\";\n\nconst Habit = () => {\nconst { loading, data } = useQuery(QUERY_ME);\nlet { id } = useParams();\nlet visibility = \"btn-block btn-danger Visible btn btn-primary\"\nif(!id){\n    visibility = \"btn-block btn-danger Hidden btn btn-primary\"\n\n} \n\nconst [createHabit, { error, habit }] = useMutation(CREATE_HABIT);\nconst [createTask, {  task }] = useMutation(CREATE_TASK);\nconst [removeTask, {}] = useMutation(REMOVE_TASK);\nconst [updateHabit, {}] = useMutation(UPDATE_HABIT);\nconst [formState, setFormState] =  useState({habitTitle:``,\n        notes:``,\n        description:``,\n        frequency:``,\n        startDate:``,\n        endDate:``});\n\nlet userData= data?.me || {};\nlet addTaskForm=``;\n\n\nuseEffect(() => {\n    if(!data){\n        return;\n    }\n    userData = data?.me || {};\n setFormState(\n        (id)?\n        // {habitTitle: userData.habits[id].title,\n        // description: userData.habits[id].tasks[taskId].description,\n        // frequency:userData.habits[id].tasks[taskId].frequency,\n        // startDate:userData.habits[id].tasks[taskId].startDate,\n        // endDate: userData.habits[id].tasks[taskId].endDate} : (id && taskId==='')?\n        {habitTitle:userData.habits[id].title,\n        notes:userData.habits[id].notes,\n        description:``,\n        frequency:``,\n        startDate:``,\n        endDate:``} :\n            {habitTitle:``,\n            notes:``,\n            description:``,\n            frequency:``,\n            startDate:``,\n            endDate:``}\n    )}, [data]);\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleHabitFormSubmit = async (event) => {\n    event.preventDefault();\n    const habitToSave = {\n    title:formState.habitTitle,\n}\n\nif (!id){\n    try {\n        const { habit } = await createHabit({\n          variables: { habit: habitToSave },\n        });\n        id = data.me.habits.length;\n        document.location.replace(`/habit/${id}`);\n\n  \n      } catch (e) {\n        console.error(e);\n      }\n}\nelse if(id){\n\n    try {\n        const { habit } = await updateHabit({id,\n          variables: { \n              index: id,\n              habit: habitToSave },\n        });\n  \n      } catch (e) {\n        console.error(e);\n      }\n}\n\n  };\n\n  //Create a task\n  const handleTaskFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const taskToSave = {\n        description:formState.description,\n        frequency:formState.frequency,\n        startDate:formState.startDate,\n        endDate:formState.endDate,\n\n    }\n\n    if(document.getElementById(\"addTaskForm\").className=\"Visible\"){\n        document.getElementById(\"addTaskForm\").setAttribute(\"class\",\"Hidden\");\n            visibility = \"btn-block btn-danger Visible btn btn-primary\";\n            document.getElementById(\"newTaskBtn\").setAttribute(\"class\",visibility);\n\n    }\n\n    try {\n      const { task } = await createTask({\n        variables: { \n            index: id,\n            task:taskToSave},\n      });\n\n    } catch (e) {\n      console.error(e);\n    }\n\nsetFormState(\n        {\n        description:``,\n        frequency:``,\n        startDate:``,\n        endDate:``} );\n\n        };\n\n\n  const handleDeleteTask = async (taskId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n\n      await removeTask({variables: {\n        index: id,\n        taskId: taskId}})\n\n\n      // upon success, remove task from page\n    //   removeTaskId(taskId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEditTask = async (taskId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n\n    //   await updateTask({variables: {taskId: taskId}})\n\n\n    //   // upon success, remove task from localStorage\n    //   removeTaskId(taskId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n\n  const addNewTask = () =>{\n    let addTaskForm = document.getElementById(\"addTaskForm\");\n    addTaskForm.setAttribute(\"class\",\"Visible\");\n    visibility = \"btn-block btn-danger Hidden btn btn-primary\"\n    document.getElementById(\"newTaskBtn\").setAttribute(\"class\",visibility);\n\n  };\n  \n\n  if (loading) {\n\n    return <div>Loading...</div>;\n    \n  }\n\n\nreturn (\n<>\n\n<form onSubmit={handleHabitFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Habit Title\"\n                  name=\"habitTitle\"\n                  type=\"text\"\n                  value={formState.habitTitle}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Save Habit\n                </button>\n              </form>\n              \n              <Button id='newTaskBtn' className={visibility} onClick={() => addNewTask()}>\n                    Add New Task\n                </Button>\n\n            <div id='addTaskForm' className=\"Hidden\">\n                <form onSubmit={handleTaskFormSubmit}>\n                    <input\n                    className=\"form-input\"\n                    placeholder=\"Task Description\"\n                    name=\"description\"\n                    type=\"text\"\n                    value={formState.description}\n                    onChange={handleChange}\n                    />\n                    <input\n                    className=\"form-input\"\n                    placeholder=\"Task Frequency\"\n                    name=\"frequency\"\n                    type=\"text\"\n                    value={formState.frequency}\n                    onChange={handleChange}\n                    />\n                    <input\n                    className=\"form-input\"\n                    placeholder=\"Task Start Date\"\n                    name=\"startDate\"\n                    type=\"date\"\n                    value={formState.startDate}\n                    onChange={handleChange}\n                    />\n                    <input\n                    className=\"form-input\"\n                    placeholder=\"TaskEndDate\"\n                    name=\"endDate\"\n                    type=\"date\"\n                    value={formState.endDate}\n                    onChange={handleChange}\n                    />\n                    <button\n                    id=\"taskBtn\"\n                    className=\"btn btn-block btn-primary\"\n                    style={{ cursor: 'pointer' }}\n                    type=\"submit\"\n                    >\n                    Save Task\n                    </button>\n                    </form>\n                </div>\n \n                <div id=\"notesForm\" className=\"Visible\" >\n                <form onSubmit={handleHabitFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"notes\"\n                  name=\"notes\"\n                  type=\"message\"\n                  value={formState.notes}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Save Entry\n                </button>\n              </form>\n              </div>\n            {userData.habits[id]?.tasks.map((task) => {\n            return (\n\n\n              <Card key={task.taskId} border='dark'>\n                <Card.Body>\n                  <Card.Title>{task.description}</Card.Title>\n                  <Button className='btn-block btn-danger' onClick={() => handleEditTask(task.taskId)}>\n                    Edit\n                  </Button>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteTask(task.taskId)}>\n                    Delete\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n\n\n\n</>\n  \n  );\n    \n};\n\nexport default Habit;","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Header\\index.js",["89"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./header.css\";\nimport Auth from \"../../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"container header__container\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <h5>Welcome to</h5>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Happy Habits</h1>\n          </Link>\n          <p className=\"m-0\">Little changes, big results.</p>\n        </div>\n        <div className=\"cta\">\n          {Auth.loggedIn() ? (\n            \"\"\n          ) : (\n            <>\n              <Link className=\"btn\" id=\"loginbtn\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-primary\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Footer\\index.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\auth.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\mutations.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\utils\\queries.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Habit\\index.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\PlotChart\\index.js",[],"D:\\GA Tech Bootcamp\\git-repositories\\HappyHabits\\client\\src\\components\\Habit\\taskDateFuns.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":3,"column":21,"nodeType":"96","messageId":"97","endLine":3,"endColumn":30},{"ruleId":"94","severity":1,"message":"99","line":3,"column":32,"nodeType":"96","messageId":"97","endLine":3,"endColumn":43},{"ruleId":"94","severity":1,"message":"100","line":20,"column":23,"nodeType":"96","messageId":"97","endLine":20,"endColumn":28},{"ruleId":"94","severity":1,"message":"101","line":20,"column":30,"nodeType":"96","messageId":"97","endLine":20,"endColumn":35},{"ruleId":"94","severity":1,"message":"102","line":21,"column":23,"nodeType":"96","messageId":"97","endLine":21,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":22,"column":20,"nodeType":"105","messageId":"106","endLine":22,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":23,"column":21,"nodeType":"105","messageId":"106","endLine":23,"endColumn":23},{"ruleId":"94","severity":1,"message":"107","line":32,"column":5,"nodeType":"96","messageId":"97","endLine":32,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":39,"column":16,"nodeType":"110","endLine":39,"endColumn":30},{"ruleId":"94","severity":1,"message":"101","line":79,"column":17,"nodeType":"96","messageId":"97","endLine":79,"endColumn":22},{"ruleId":"94","severity":1,"message":"101","line":93,"column":17,"nodeType":"96","messageId":"97","endLine":93,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":118,"column":8,"nodeType":"113","messageId":"114","endLine":118,"endColumn":66},{"ruleId":"94","severity":1,"message":"102","line":126,"column":15,"nodeType":"96","messageId":"97","endLine":126,"endColumn":19},{"ruleId":"94","severity":1,"message":"115","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":15},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'CardColumns' is defined but never used.","'error' is assigned a value but never used.","'habit' is assigned a value but never used.","'task' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'addTaskForm' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'userData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'logout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]